/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import 'gameObejctImp.sol';
import 'basestation.sol';

//Контракт "Военный юнит" (Родитель "Игровой объект")
abstract contract warunit is gameObejctImp {

    basestation public addressbas;
   
    uint public atac = 6;
    uint public static unitNumber;

  // конструктор принимает "Базовая станция" и вызывает метод "Базовой Станции" 
  //"Добавить военный юнит" а у себя сохраняет адрес "Базовой станции"
    constructor (basestation base) public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
        addressbas = base;
        addressbas.addUnit();
    }


    //- атаковать (принимает ИИО [его адрес])
    function ataca(gameObejct addresiio) public checkOwnerAndAccept {
        addresiio.addAtaca(atac);
    }
    //- получить силу атаки
    function ataclevel(uint value) public virtual;

    //- получить силу защиты
    function addProtection(uint pow) public virtual override;

    //- обработка гибели [вызов метода самоуничтожения + убрать военный юнит из базовой станции]

    function processingdeath() public override checkOwnerAndAccept{
        sendValue(addressenemy);
        addressbas.deleteunit();
    }

    //- смерть из-за базы (проверяет, что вызов от родной базовой станции только будет работать) [вызов метода самоуничтожения]
    function deathisbase() public view {
       if(msg.sender == addressbas) {
        sendValue(addressenemy);
       }
    }
}